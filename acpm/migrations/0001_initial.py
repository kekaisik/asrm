# Generated by Django 4.0.6 on 2022-08-10 14:41

import acpm.models
import ckeditor.fields
import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ru_title', models.CharField(max_length=100, verbose_name='Название')),
                ('en_title', models.CharField(max_length=100, verbose_name='Название')),
                ('kz_title', models.CharField(max_length=100, verbose_name='Название')),
                ('ru_text', ckeditor.fields.RichTextField(blank=True)),
                ('en_text', ckeditor.fields.RichTextField(blank=True)),
                ('kz_text', ckeditor.fields.RichTextField(blank=True)),
                ('paid', models.BooleanField(default=False, verbose_name='Платный')),
                ('main_image', models.ImageField(blank=True, upload_to='post/img/', verbose_name='Основное фото')),
                ('category', models.CharField(max_length=50, verbose_name='Категория')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата Публикации')),
                ('draft', models.BooleanField(default=False, verbose_name='Черновик')),
            ],
            options={
                'verbose_name': 'Образование',
                'verbose_name_plural': 'Образование',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ru_title', models.CharField(max_length=100, verbose_name='Название')),
                ('en_title', models.CharField(max_length=100, verbose_name='Название')),
                ('kz_title', models.CharField(max_length=100, verbose_name='Название')),
                ('ru_text', ckeditor.fields.RichTextField(blank=True)),
                ('en_text', ckeditor.fields.RichTextField(blank=True)),
                ('kz_text', ckeditor.fields.RichTextField(blank=True)),
                ('paid', models.BooleanField(default=False, verbose_name='Платный')),
                ('main_image', models.ImageField(blank=True, upload_to='post/img/', verbose_name='Основное фото')),
                ('category', models.CharField(max_length=50, verbose_name='Категория')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата Публикации')),
                ('draft', models.BooleanField(default=False, verbose_name='Черновик')),
                ('end_date', models.DateField(default=django.utils.timezone.now, verbose_name='Окончание Мероприятия')),
            ],
            options={
                'verbose_name': 'Мероприятия',
                'verbose_name_plural': 'Мероприятия',
            },
        ),
        migrations.CreateModel(
            name='Index',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Название')),
                ('text', ckeditor.fields.RichTextField()),
                ('category', models.CharField(choices=[('about-us', 'О нас'), ('membership', 'Членство')], max_length=15)),
                ('language', models.CharField(choices=[('ru', 'Русский'), ('en', 'Английский'), ('kz', 'Казахский')], default='ru', max_length=2, verbose_name='Языки')),
            ],
            options={
                'verbose_name': 'Начальная Страница',
                'verbose_name_plural': 'Начальная Страница',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
                ('text', ckeditor.fields.RichTextField(verbose_name='Текст')),
                ('paid', models.BooleanField(default=False, verbose_name='Платный')),
                ('language', models.CharField(choices=[('ru', 'Русский'), ('en', 'Английский'), ('kz', 'Казахский')], max_length=2, verbose_name='Язык')),
                ('main_image', models.ImageField(blank=True, upload_to='post/img/', verbose_name='Основное фото')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата Публикации')),
                ('draft', models.BooleanField(default=False, verbose_name='Черновик')),
            ],
            options={
                'verbose_name': 'Новость',
                'verbose_name_plural': 'Новости',
            },
        ),
        migrations.CreateModel(
            name='Protocols',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ru_title', models.CharField(max_length=100, verbose_name='Название')),
                ('en_title', models.CharField(max_length=100, verbose_name='Название')),
                ('kz_title', models.CharField(max_length=100, verbose_name='Название')),
                ('ru_text', ckeditor.fields.RichTextField(blank=True)),
                ('en_text', ckeditor.fields.RichTextField(blank=True)),
                ('kz_text', ckeditor.fields.RichTextField(blank=True)),
                ('paid', models.BooleanField(default=False, verbose_name='Платный')),
                ('main_image', models.ImageField(blank=True, upload_to='post/img/', verbose_name='Основное фото')),
                ('category', models.CharField(max_length=50, verbose_name='Категория')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата Публикации')),
                ('draft', models.BooleanField(default=False, verbose_name='Черновик')),
            ],
            options={
                'verbose_name': 'Клинические Протокол',
                'verbose_name_plural': 'Клинические Протоколы',
            },
        ),
        migrations.CreateModel(
            name='Society',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ru_title', models.CharField(max_length=100, verbose_name='Название')),
                ('en_title', models.CharField(max_length=100, verbose_name='Название')),
                ('kz_title', models.CharField(max_length=100, verbose_name='Название')),
                ('ru_text', ckeditor.fields.RichTextField(blank=True)),
                ('en_text', ckeditor.fields.RichTextField(blank=True)),
                ('kz_text', ckeditor.fields.RichTextField(blank=True)),
                ('paid', models.BooleanField(default=False, verbose_name='Платный')),
                ('main_image', models.ImageField(blank=True, upload_to='post/img/', verbose_name='Основное фото')),
                ('category', models.CharField(max_length=50, verbose_name='Категория')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата Публикации')),
                ('draft', models.BooleanField(default=False, verbose_name='Черновик')),
            ],
            options={
                'verbose_name': 'Запись',
                'verbose_name_plural': 'Записи',
            },
        ),
        migrations.CreateModel(
            name='Youtube_Url_Society',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('youtube_url', models.CharField(max_length=150, verbose_name='Ютуб ссылка')),
                ('society', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='youtube_urls', to='acpm.society')),
            ],
            options={
                'verbose_name': 'Ютуб Ссылка',
                'verbose_name_plural': 'Ютуб Ссылки',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Youtube_Url_Protocols',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('youtube_url', models.CharField(max_length=150, verbose_name='Ютуб ссылка')),
                ('protocols', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='youtube_urls', to='acpm.protocols')),
            ],
            options={
                'verbose_name': 'Ютуб Ссылка',
                'verbose_name_plural': 'Ютуб Ссылки',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Youtube_Url_News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('youtube_url', models.CharField(max_length=150, verbose_name='Ютуб ссылка')),
                ('news', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='youtube_urls', to='acpm.news')),
            ],
            options={
                'verbose_name': 'Ютуб Ссылка',
                'verbose_name_plural': 'Ютуб Ссылки',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Youtube_Url_Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('youtube_url', models.CharField(max_length=150, verbose_name='Ютуб ссылка')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='youtube_urls', to='acpm.event')),
            ],
            options={
                'verbose_name': 'Ютуб Ссылка',
                'verbose_name_plural': 'Ютуб Ссылки',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Youtube_Url_Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('youtube_url', models.CharField(max_length=150, verbose_name='Ютуб ссылка')),
                ('education', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='youtube_urls', to='acpm.education')),
            ],
            options={
                'verbose_name': 'Ютуб Ссылка',
                'verbose_name_plural': 'Ютуб Ссылки',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Society_Images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to=acpm.models.get_file_path)),
                ('society', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='acpm.society')),
            ],
            options={
                'verbose_name': 'Фото',
                'verbose_name_plural': 'Фото',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Protocols_Images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to=acpm.models.get_file_path)),
                ('protocols', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='acpm.protocols')),
            ],
            options={
                'verbose_name': 'Фото',
                'verbose_name_plural': 'Фото',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PDF_Society',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdf', models.FileField(null=True, upload_to=acpm.models.get_file_path)),
                ('society', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pdfs', to='acpm.society')),
            ],
            options={
                'verbose_name': 'PDF',
                'verbose_name_plural': 'PDF',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PDF_Protocols',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdf', models.FileField(null=True, upload_to=acpm.models.get_file_path)),
                ('protocols', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pdfs', to='acpm.protocols')),
            ],
            options={
                'verbose_name': 'PDF',
                'verbose_name_plural': 'PDF',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PDF_News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdf', models.FileField(null=True, upload_to=acpm.models.get_file_path)),
                ('news', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pdfs', to='acpm.news')),
            ],
            options={
                'verbose_name': 'PDF',
                'verbose_name_plural': 'PDF',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PDF_Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdf', models.FileField(null=True, upload_to=acpm.models.get_file_path)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pdfs', to='acpm.event')),
            ],
            options={
                'verbose_name': 'PDF',
                'verbose_name_plural': 'PDF',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PDF_Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdf', models.FileField(null=True, upload_to=acpm.models.get_file_path)),
                ('education', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pdfs', to='acpm.education')),
            ],
            options={
                'verbose_name': 'PDF',
                'verbose_name_plural': 'PDF',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='News_Images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to=acpm.models.get_file_path)),
                ('news', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='acpm.news')),
            ],
            options={
                'verbose_name': 'Фото',
                'verbose_name_plural': 'Фото',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Event_Images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to=acpm.models.get_file_path)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='acpm.event')),
            ],
            options={
                'verbose_name': 'Фото',
                'verbose_name_plural': 'Фото',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Education_Images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to=acpm.models.get_file_path)),
                ('education', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='acpm.education')),
            ],
            options={
                'verbose_name': 'Фото',
                'verbose_name_plural': 'Фото',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=100, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('fatherland', models.CharField(blank=True, max_length=100, verbose_name='Отчество')),
                ('paid', models.BooleanField(default=False, verbose_name='Участник Общества')),
                ('expiration_date', models.DateField(blank=True, default=datetime.datetime(2022, 8, 10, 14, 41, 40, 813324, tzinfo=utc), verbose_name='Подписка действительна до')),
                ('profession', models.CharField(max_length=100, verbose_name='Профессия')),
                ('date_of_Birth', models.DateField(default=django.utils.timezone.now, verbose_name='Дата Рождения')),
                ('phone', models.CharField(max_length=50, unique=True, verbose_name='Номер Телефона')),
                ('address', models.CharField(max_length=100, verbose_name='Адрес')),
                ('city', models.CharField(max_length=100, verbose_name='Город')),
                ('country', models.CharField(max_length=100, verbose_name='Страна')),
                ('place_of_work', models.CharField(max_length=100, verbose_name='Место Работы')),
                ('job', models.CharField(max_length=100, verbose_name='Должность')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]

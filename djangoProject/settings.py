"""
Django settings for djangoProject project.

Generated by 'django-admin startproject' using Django 4.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os.path
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
import dj_database_url

BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-k-@8h(1q-1&31oc%%m2lbcvyyfdk7bp9#db^vk58cf2ep4jng)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

DEVELOPER = True

ALLOWED_HOSTS = ['*', 'asrm-admin.kz', '13.50.48.201']

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'corsheaders',
    'rest_framework',
    'rest_framework.authtoken',
    'djoser',
    'drf_yasg',
    'ckeditor',
    'ckeditor_uploader',

    'acpm',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'djangoProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'djangoProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'NAME': 'acpm',
#         'USER': 'postgres',
#         'PASSWORD': '504142',
#         'HOST': 'localhost',
#         'PORT': '6000',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Post_Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

# STATIC_URL = 'static/'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field


REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
            'rest_framework.permissions.IsAdminUser',
            'rest_framework.permissions.AllowAny',
    ),
    'PAGE_SIZE': 2,
    'DEFAULT_AUTHENTICATION_CLASSES': (
        # 'rest_framework jwt.authentication.JSONWeb TokenAuthentication"
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ),
    'EXCEPTION_HANDLER': 'rest_framework_json_api.exceptions.exception_handler',
    "DEFAULT_PAGINATION_CLASS":
        'rest_framework.pagination.LimitOffsetPagination',
    "DEFAULT_PARSER_CLASSES": (
            'rest_framework_json_api.parsers.JSONParser',
            'rest_framework.parsers.FormParser',
            'rest_framework.parsers.MultiPartParser',
    ),
    'DEFAULT RENDERER_CLASSES': (
            'rest_framework_json_api.renderers.JSONRenderer',
            'rest_framework.renderers BrowsableAPIRenderer',
    ),
    'DEFAULT_METADATA_CLASS': 'rest_framework_json_api.metadata.JSONAPIMetadata',
}

#
SITE_NAME = 'asrm.kz'

DOMAIN = 'https://asrm.kz'

DJOSER = {
    'SERIALIZERS': {
        'user_create': 'acpm.serializers.UserRegistrationSerializer',
        'user': 'acpm.serializers.UserCurrentSerializer',
        'current_user': 'acpm.serializers.UserCurrentSerializer',
    },
    'HIDE_USERS': True,
    'ACTIVATION_URL': 'activation/{uid}/{token}',
    'PASSWORD_RESET_CONFIRM_URL': 'reset_password/{uid}/{token}',
    'SEND_ACTIVATION_EMAIL': True,

}


EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 465
EMAIL_HOST_USER = 'kakaisik0606@gmail.com'
EMAIL_HOST_PASSWORD = 'efxhsyedvccyirkk'
EMAIL_USE_TLS = False
EMAIL_USE_SSL = True

# CKEDITOR_CONFIGS = {
#     'default': {
#         'skin': 'moono',
#         # 'skin': 'office2013',
#         'toolbar_Basic': [
#             ['Source', '-', 'Bold', 'Italic']
#         ],
#         'toolbar_CMS': [
#             ['Format', 'Styles', 'FontSize'],
#             ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript'],
#             ['TextColor', 'BGColor'],
#             ['Link', 'Unlink'],
#             ['JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
#             ['Undo', 'Redo'],
#             ['Copy', 'Paste', 'PasteText', 'PasteFromWord'],
#             ['SelectAll', 'Find', 'Replace'],
#             ['NumberedList', 'BulletedList'],
#             ['Outdent', 'Indent'],
#             ['Smiley', 'SpecialChar', 'Blockquote', 'HorizontalRule'],
#             ['Table', 'Image', 'Youtube'],
#             ['ShowBlocks', 'Source', 'About']],
#         'tabSpaces': 4,
#         'extraPlugins': ','.join([
#             'youtube'
#         ]),
#     }
# }

CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'CMS',
        'width': '100%',
        'toolbar_CMS': [
            ['Format', 'Styles', 'FontSize'],
            ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript'],
            ['TextColor', 'BGColor'],
            ['Link', 'Unlink'],
            ['JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
            ['Undo', 'Redo'],
            ['Copy', 'Paste', 'PasteText', 'PasteFromWord'],
            ['SelectAll', 'Find', 'Replace'],
            ['NumberedList', 'BulletedList'],
            ['Outdent', 'Indent'],
            ['Smiley', 'SpecialChar', 'Blockquote', 'HorizontalRule'],
            ['Table', 'Image', 'Youtube', 'Iframe'],
            ['Iframedialog'],
            ['ShowBlocks', 'Source', 'About']

        ],
        'extraPlugins': ','.join([
            'youtube',
            'iframe',
            'iframedialog'
        ]),
        'contentsCss': (
            '/staticfiles/ckeditor/customization-files/style.css',
            '/staticfiles/ckeditor/customization-files/bootstrap.css',
        ),
    },
}

CORS_ORIGIN_ALLOW_ALL = True


AUTH_USER_MODEL = 'acpm.User'


CKEDITOR_UPLOAD_PATH = 'uploads/'


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'asrm',
        'USER': 'postgres',
        'PASSWORD': 'kszda2019',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


#
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'NAME': 'acpm',
#         'USER': 'postgres',
#         'PASSWORD': '504142',
#         'HOST': 'localhost',
#         'PORT': '6000',
#     }
# }

db_from_env = dj_database_url.config()
PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))
DATABASES['default'].update(db_from_env)

# #
PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))
STATIC_URL = '/static/'
# Extra places for collectstatic to find static files.
STATICFILES_DIRS = (
    os.path.join(PROJECT_ROOT, 'static'),)
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


# try:
#     from .local_settings import *
# except ImportError:
#     from .prod_settings import *
# DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
